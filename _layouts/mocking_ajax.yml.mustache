---
# This file was generated by locco from {{ &src_path }}. Do not edit it directly!
layout: tutorial
redirect_from:
{{#redirectFrom}}
    - "{{ &path }}"
{{/redirectFrom}}
include_docco: true
file_name: "{{ &filename }}"
archived: true
---
<div class="warning" style="margin-bottom: 1em">
    This tutorial describes an approach for mocking AJAX calls that are made via
    <code>XMLHTTPRequest</code>. Most newer codebases use either
    <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"><code>fetch</code></a>
    or a wrapper library that is more amenable to dependency injection than
    <code>XMLHTTPRequest</code> is. Code using those approaches can be tested
    with Jasmine's built-in spy functionality, as described in
    <a href="{{ site.baseurl }}/pages/faq.html#ajax">the FAQ</a>.
</div>
<table class="docco" cellspacing="0" cellpadding="0">
    <tbody>
    {{#sections}}
        <tr id="section-{{ id }}">
            <td class="docs">
                <div class="pilwrap">
                    <a class="pilcrow" href="#section-{{ id }}">&#182;</a>
                </div>
                <div>
                    {{{ docs }}}
                </div>
            </td>
            <td class="code">
                {% highlight javascript %}{{{ code }}} {% endhighlight %}
            </td>
        </tr>
    {{/sections}}
    </tbody>
</table>
